name: Monthly Site Rebuild

# This workflow runs on the 1st of every month to:
# 1. Export fresh Airtable data
# 2. Rebuild the site with updated promo dates
# 3. Commit changes to trigger deployment
#
# WHY: The ads feed uses dynamic "Through {end of month}" promo text
# that needs to be updated monthly to stay current.
#
# The build-time date helper (getEndOfMonthFormatted) generates dates
# based on when the site is built, so monthly rebuilds ensure the
# "Through Jan 31" text updates to "Through Feb 28" in February, etc.

on:
  # Scheduled trigger: 2am UTC on the 1st of every month
  schedule:
    - cron: '0 2 1 * *' # Min Hour Day Month DayOfWeek

  # Manual trigger via GitHub UI (for testing)
  workflow_dispatch:

jobs:
  rebuild:
    runs-on: ubuntu-latest

    steps:
      # ============================================
      # 1. SETUP
      # ============================================

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # ============================================
      # 2. EXPORT AIRTABLE DATA
      # ============================================

      - name: Export Airtable data
        env:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        run: npm run export-airtable

      # ============================================
      # 3. BUILD SITE (generates fresh promo dates)
      # ============================================
      # Build runs at current date, so getEndOfMonthFormatted()
      # will generate the correct end-of-month date

      - name: Build Next.js site
        run: npm run build

      # ============================================
      # 4. COMMIT CHANGES
      # ============================================

      - name: Check for changes
        id: git-check
        run: |
          # Check if content.json changed (new data from Airtable)
          if git diff --exit-code content.json; then
            echo "content_changed=false" >> $GITHUB_OUTPUT
          else
            echo "content_changed=true" >> $GITHUB_OUTPUT
          fi

          # Check if out directory changed (new build with fresh dates)
          if git diff --exit-code out/; then
            echo "build_changed=false" >> $GITHUB_OUTPUT
          else
            echo "build_changed=true" >> $GITHUB_OUTPUT
          fi

          # Set overall changed flag
          if [[ "${{ steps.git-check.outputs.content_changed }}" == "true" ]] || \
             [[ "${{ steps.git-check.outputs.build_changed }}" == "true" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push monthly rebuild
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          # Add content.json if it changed
          if [[ "${{ steps.git-check.outputs.content_changed }}" == "true" ]]; then
            git add content.json
          fi

          # Add build output if it changed
          if [[ "${{ steps.git-check.outputs.build_changed }}" == "true" ]]; then
            git add out/
          fi

          # Commit with monthly rebuild message
          MONTH_YEAR=$(date '+%B %Y')
          git commit -m "Monthly site rebuild for ${MONTH_YEAR}

          - Fresh Airtable export
          - Updated promo dates (Through $(date -d "$(date +%Y-%m-01) + 1 month - 1 day" +"%b %d"))
          - Rebuild triggered by scheduled workflow

          ðŸ¤– Generated by GitHub Actions
          ðŸ“… Scheduled: 1st of each month at 2am UTC"

          git push origin master

      - name: No changes detected
        if: steps.git-check.outputs.changed != 'true'
        run: |
          echo "No changes detected - this is unusual for a monthly rebuild"
          echo "Content.json changed: ${{ steps.git-check.outputs.content_changed }}"
          echo "Build changed: ${{ steps.git-check.outputs.build_changed }}"

      # ============================================
      # 5. DEPLOYMENT NOTIFICATION
      # ============================================

      - name: Deployment trigger
        if: steps.git-check.outputs.changed == 'true'
        run: |
          echo "Changes pushed to master branch"
          echo "Netlify/Vercel will automatically deploy the updated site"
          echo "Fresh promo dates will be live shortly"
